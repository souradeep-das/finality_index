"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.startProxy = void 0;
const createPool_js_1 = require("../pool/createPool.js");
const createProxy_js_1 = require("./createProxy.js");
/**
 * Creates and starts a proxy server that spawns anvil instance on demand.
 *
 * @example
 * ```
 * import { startProxy } from "@viem/anvil";
 *
 * // Returns a function to shut down the proxy and all created anvil instances.
 * const shutdown = await startProxy({
 *   port: 8555,
 *   options: {
 *     forkUrl: "https://eth-mainnet.alchemyapi.io/v2/<API_KEY>",
 *     blockNumber: 12345678,
 *   },
 * });
 *
 * // Shut down the proxy and all created anvil instances.
 * await shutdown();
 * ```
 */
async function startProxy({ port = 8545, host = "::", pool = (0, createPool_js_1.createPool)(), ...rest } = {}) {
    // rome-ignore lint/suspicious/noAsyncPromiseExecutor: this is fine ...
    const server = await new Promise(async (resolve, reject) => {
        const server = await (0, createProxy_js_1.createProxy)({ pool, ...rest });
        server.on("listening", () => resolve(server));
        server.on("error", (error) => reject(error));
        server.listen(port, host);
    });
    return async () => {
        const shutdown = new Promise((resolve, reject) => {
            server.close((error) => (error ? reject(error) : resolve()));
        });
        await Promise.allSettled([pool.empty(), shutdown]);
    };
}
exports.startProxy = startProxy;
//# sourceMappingURL=startProxy.js.map