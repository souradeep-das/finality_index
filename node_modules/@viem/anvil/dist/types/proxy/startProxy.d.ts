import { type Pool } from "../pool/createPool.js";
import { type CreateProxyOptions } from "./createProxy.js";
export type StartProxyOptions = Omit<CreateProxyOptions, "pool"> & {
    /**
     * The anvil instance manager.
     */
    pool?: Pool | undefined;
    /**
     * The hostname to listen on.
     *
     * @defaultValue :: (all interfaces)
     */
    host?: string | undefined;
    /**
     * The port to listen on.
     *
     * @defaultValue 8545
     */
    port?: number | undefined;
};
/**
 * Creates and starts a proxy server that spawns anvil instance on demand.
 *
 * @example
 * ```
 * import { startProxy } from "@viem/anvil";
 *
 * // Returns a function to shut down the proxy and all created anvil instances.
 * const shutdown = await startProxy({
 *   port: 8555,
 *   options: {
 *     forkUrl: "https://eth-mainnet.alchemyapi.io/v2/<API_KEY>",
 *     blockNumber: 12345678,
 *   },
 * });
 *
 * // Shut down the proxy and all created anvil instances.
 * await shutdown();
 * ```
 */
export declare function startProxy({ port, host, pool, ...rest }?: StartProxyOptions): Promise<() => Promise<void>>;
//# sourceMappingURL=startProxy.d.ts.map